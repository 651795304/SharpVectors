<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SharpVectors.HtmlRenderer.WinForms</name>
    </assembly>
    <members>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter">
            <summary>
            Adapter for WinForms brushes objects for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter._brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter._dispose">
            <summary>
            If to dispose the brush when <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter.Dispose"/> is called.<br/>
            Ignore dispose for cached brushes.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter.#ctor(System.Drawing.Brush,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.BrushAdapter.Brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter">
            <summary>
            Adapter for WinForms Font family object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter._fontFamily">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter.#ctor(System.Drawing.FontFamily)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter.FontFamily">
            <summary>
            the underline win-forms font family.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter">
            <summary>
            Adapter for WinForms Font object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._hFont">
            <summary>
            a handle to this Font.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._underlineOffset">
            <summary>
            the vertical offset of the font underline location from the top of the font.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._height">
            <summary>
            Cached font height.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter._whitespaceWidth">
            <summary>
            Cached font whitespace width.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.#ctor(System.Drawing.Font)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.Font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.HFont">
            <summary>
            Get the handle to this Font.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.FontAdapter.SetMetrics(System.Int32,System.Int32)">
            <summary>
            Set font metrics to be cached for the font for future use.
            </summary>
            <param name="height">the full height of the font</param>
            <param name="underlineOffset">the vertical offset of the font underline location from the top of the font.</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter">
            <summary>
            Adapter for WinForms platforms.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter._instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter.#ctor">
            <summary>
            Init installed font families and set default font families mapping.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.WinFormsAdapter.Instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter">
            <summary>
            Adapter for WinForms graphics path object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter._graphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter._lastPoint">
            <summary>
            the last point added to the path to begin next segment from
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter.GraphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter.GetStartAngle(TheArtOfDev.HtmlRenderer.Adapters.RGraphicsPath.Corner)">
            <summary>
            Get arc start angle for the given corner.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter">
            <summary>
            Adapter for WinForms Image object for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter._image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ImageAdapter.Image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter">
            <summary>
            Adapter for WinForms context menu for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter._contextMenu">
            <summary>
            the underline win forms context menu
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter">
            <summary>
            Adapter for WinForms Control for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter._control">
            <summary>
            the underline win forms control.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter.#ctor(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.ControlAdapter.Control">
            <summary>
            Get the underline win forms control
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter">
            <summary>
            Adapter for WinForms Graphics for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._charFit">
            <summary>
            used for <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._charFitWidth">
            <summary>
            used for <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._characterRanges">
            <summary>
            Used for GDI+ measure string.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._stringFormat">
            <summary>
            The string format to use for measuring strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._stringFormat2">
            <summary>
            The string format to use for rendering strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._g">
            <summary>
            The wrapped WinForms graphics object
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._hdc">
            <summary>
            the initialized HDC used
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._releaseGraphics">
            <summary>
            if to release the graphics object on dispose
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._setRtl">
            <summary>
            If text alignment was set to RTL
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.#cctor">
            <summary>
            Init static resources.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.#ctor(System.Drawing.Graphics,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="g">the win forms graphics object to use</param>
            <param name="useGdiPlusTextRendering">Use GDI+ text rendering to measure/draw text</param>
            <param name="releaseGraphics">optional: if to release the graphics object on dispose (default - false)</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.ReleaseHdc">
            <summary>
            Release current HDC to be able to use <see cref="T:System.Drawing.Graphics"/> methods.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.InitHdc">
            <summary>
            Init HDC for the current graphics object to be used to call GDI directly.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetFont(TheArtOfDev.HtmlRenderer.Adapters.RFont)">
            <summary>
            Set a resource (e.g. a font) for the specified device context.
            WARNING: Calling Font.ToHfont() many times without releasing the font handle crashes the app.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetTextColor(System.Drawing.Color)">
            <summary>
            Set the text color of the device context.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdi(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.DrawTransparentText(System.IntPtr,System.String,TheArtOfDev.HtmlRenderer.Adapters.RFont,System.Drawing.Point,System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Special draw logic to draw transparent text using GDI.<br/>
            1. Create in-memory DC<br/>
            2. Copy background to in-memory DC<br/>
            3. Draw the text to in-memory DC<br/>
            4. Copy the in-memory DC to the proper location with alpha blend<br/>
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdiPlus(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter">
            <summary>
            Adapter for WinForms pens objects for core.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter._pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter.#ctor(System.Drawing.Pen)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.Adapters.PenAdapter.Pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer">
            <summary>
            Low level handling of Html Renderer logic, this class is used by <see cref="T:TheArtOfDev.HtmlRenderer.Core.Parse.HtmlParser"/>, 
            <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel"/>, <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip"/> and <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <seealso cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HtmlContainerInt"/>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer._htmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.Refresh">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ScrollChange">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or Uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HtmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br/>
            </summary>
            <remarks>
            <para>
            GDI+ text rendering is less smooth than GDI text rendering but it natively supports alpha channel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint"/>, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/> doesn't work well with transparent background.
            </para>
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.CssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.AvoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            True - images are loaded synchronously during html parsing.<br/>
            False - images are loaded asynchronously to html parsing when downloaded from URL or loaded from disk.<br/>
            </summary>
            <remarks>
            Asynchronously image loading allows to unblock html rendering while image is downloaded or loaded from disk using IO 
            ports to achieve better performance.<br/>
            Asynchronously image loading should be avoided when the full html content must be available during render, like render to image.
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ScrollOffset">
            <summary>
            The scroll offset of the html.<br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            </summary>
            <example>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered as it
            will be at -100 therefore outside the client rectangle.
            </example>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.Location">
            <summary>
            The top-left most location of the rendered html.<br/>
            This will offset the top-left corner of the rendered html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.MaxSize">
            <summary>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ActualSize"/> can be exceed the max size by layout restrictions (unwrappable line, set image size, etc.).<br/>
            Set zero for unlimited (width\height separately).<br/>
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ActualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.SetHtml(System.String,TheArtOfDev.HtmlRenderer.Core.CssData)">
            <summary>
            Init with optional document and stylesheet.
            </summary>
            <param name="htmlSource">the html to init with, init empty if not given</param>
            <param name="baseCssData">optional: the stylesheet to init with, init default if not given</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetHtml(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Get html from the current DOM tree with style if requested.
            </summary>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated (default: <see cref="F:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlGenerationStyle.Inline"/>)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetAttributeAt(System.Drawing.Point,System.String)">
            <summary>
            Get attribute value of element at the given x,y location by given key.<br/>
            If more than one element exist with the attribute at the location the inner most is returned.
            </summary>
            <param name="location">the location to find the attribute at</param>
            <param name="attribute">the attribute key to get value by</param>
            <returns>found attribute value or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetLinks">
            <summary>
            Get all the links in the HTML with the element rectangle and href data.
            </summary>
            <returns>collection of all the links in the HTML</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetLinkAt(System.Drawing.Point)">
            <summary>
            Get css link href at the given x,y location.
            </summary>
            <param name="location">the location to find the link at</param>
            <returns>css link href if exists or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.PerformLayout(System.Drawing.Graphics)">
            <summary>
            Measures the bounds of box and children, recursively.
            </summary>
            <param name="g">Device context to draw</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.PerformPaint(System.Drawing.Graphics)">
            <summary>
            Render the html using the given device.
            </summary>
            <param name="g">the device to use to render</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseDown(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseUp(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseDoubleClick(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseMove(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleMouseLeave(System.Windows.Forms.Control)">
            <summary>
            Handle mouse leave to handle hover cursor.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle key down event for selection and copy.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the pressed key</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.CreateMouseEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Create HtmlRenderer mouse event from win forms mouse event.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer.CreateKeyEevent(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Create HtmlRenderer key event from win forms key event.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel">
            <summary>
            Provides HTML rendering using the text property.<br/>
            WinForms control that will render html content in it's client rectangle.<br/>
            Using <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSize"/> and <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSizeHeightOnly"/> client can control how the html content effects the
            size of the label. Either case scrollbars are never shown and html content outside of client bounds will be clipped.
            <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.MaximumSize"/> and <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.MinimumSize"/> with AutoSize can limit the max/min size of the control<br/>
            The control will handle mouse and keyboard events on it to support html text selection, copy-paste and mouse clicks.<br/>
            <para>
            The major differential to use HtmlPanel or HtmlLabel is size and scrollbars.<br/>
            If the size of the control depends on the html content the HtmlLabel should be used.<br/>
            If the size is set by some kind of layout then HtmlPanel is more suitable, also shows scrollbars if the html contents is larger than the control client rectangle.<br/>
            </para>
            <para>
            <h4>AutoSize:</h4>
            <u>AutoSize = AutoSizeHeightOnly = false</u><br/>
            The label size will not change by the html content. MaximumSize and MinimumSize are ignored.<br/>
            <br/>
            <u>AutoSize = true</u><br/>
            The width and height is adjustable by the html content, the width will be longest line in the html, MaximumSize.Width will restrict it but it can be lower than that.<br/>
            <br/>
            <u>AutoSizeHeightOnly = true</u><br/>
            The width of the label is set and will not change by the content, the height is adjustable by the html content with restrictions to the MaximumSize.Height and MinimumSize.Height values.<br/>
            </para>
            <para>
            <h4>LinkClicked event</h4>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </para>
            <para>
            <h4>StylesheetLoad event:</h4>
            Raised when aa stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <h4>ImageLoad event:</h4>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </para>
            <para>
            <h4>RenderError event:</h4>
            Raised when an error occurred during html rendering.<br/>
            </para>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._htmlContainer">
            <summary>
            Underline html container instance.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._borderStyle">
            <summary>
            The current border style of the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._baseRawCssData">
            <summary>
            the raw base stylesheet data used in the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._baseCssData">
            <summary>
            the base stylesheet data used in the panel
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._text">
            <summary>
            the current html text set in the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._autoSizeHight">
            <summary>
            is to handle auto size of the control height only
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._useSystemCursors">
            <summary>
            If to use cursors defined by the operating system or .NET cursors
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel._textRenderingHint">
            <summary>
            The text rendering hint to be used for text rendering.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.#ctor">
            <summary>
            Creates a new HTML Label
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.BorderStyleChanged">
            <summary>
              Raised when the BorderStyle property value changes.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.StylesheetLoad">
            <summary>
            Raised when aa stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br/>
            </summary>
            <remarks>
            <para>
            GDI+ text rendering is less smooth than GDI text rendering but it natively supports alpha channel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint"/>, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/> doesn't work well with transparent background.
            </para>
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.TextRenderingHint">
            <summary>
            The text rendering hint to be used for text rendering.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.UseSystemCursors">
            <summary>
            If to use cursors defined by the operating system or .NET cursors
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.BaseStylesheet">
            <summary>
            Set base stylesheet to be used by html rendered in the panel.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSize">
            <summary>
            Automatically sets the size of the label by content size
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSizeHeightOnly">
            <summary>
            Automatically sets the height of the label by content height (width is not effected).
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.MaximumSize">
            <summary>
            Gets or sets the max size the control get be set by <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSize"/> or <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSizeHeightOnly"/>.
            </summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"/> representing the width and height of a rectangle.</returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.MinimumSize">
            <summary>
            Gets or sets the min size the control get be set by <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSize"/> or <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AutoSizeHeightOnly"/>.
            </summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"/> representing the width and height of a rectangle.</returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.Text">
            <summary>
            Gets or sets the html of this control.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.GetHtml">
            <summary>
            Get html from the current DOM tree with inline style.
            </summary>
            <returns>generated html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.CreateParams">
            <summary>
            Override to support border for the control.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Perform the layout of the html in the control.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Perform paint of the html in the control.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnMouseLeave(System.EventArgs)">
            <summary>
            Handle mouse leave to handle cursor change.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnBorderStyleChanged(System.EventArgs)">
            <summary>
              Raises the <see cref="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.BorderStyleChanged" /> event.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnLoadComplete(System.EventArgs)">
            <summary>
            Propagate the LoadComplete event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnLinkClicked(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs)">
            <summary>
            Propagate the LinkClicked event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnRenderError(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs)">
            <summary>
            Propagate the Render Error event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnStylesheetLoad(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs)">
            <summary>
            Propagate the stylesheet load event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnImageLoad(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Propagate the image load event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.OnRefresh(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs)">
            <summary>
            Handle html renderer invalidate and re-layout as requested.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Override the proc processing method to set OS specific hand cursor.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.Dispose(System.Boolean)">
            <summary>
            Release the html container resources.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.Font">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.ForeColor">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.AllowDrop">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.RightToLeft">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.Cursor">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel.UseWaitCursor">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel">
            <summary>
            Provides HTML rendering using the text property.<br/>
            WinForms control that will render html content in it's client rectangle.<br/>
            If <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.AutoScroll"/> is true and the layout of the html resulted in its content beyond the client bounds 
            of the panel it will show scrollbars (horizontal/vertical) allowing to scroll the content.<br/>
            If <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.AutoScroll"/> is false html content outside the client bounds will be clipped.<br/>
            The control will handle mouse and keyboard events on it to support html text selection, copy-paste and mouse clicks.<br/>
            <para>
            The major differential to use HtmlPanel or HtmlLabel is size and scrollbars.<br/>
            If the size of the control depends on the html content the HtmlLabel should be used.<br/>
            If the size is set by some kind of layout then HtmlPanel is more suitable, also shows scrollbars if the html contents is larger than the control client rectangle.<br/>
            </para>
            <para>
            <h4>AutoScroll:</h4>
            Allows showing scrollbars if html content is placed outside the visible boundaries of the panel.
            </para>
            <para>
            <h4>LinkClicked event:</h4>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </para>
            <para>
            <h4>StylesheetLoad event:</h4>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <h4>ImageLoad event:</h4>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </para>
            <para>
            <h4>RenderError event:</h4>
            Raised when an error occurred during html rendering.<br/>
            </para>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._htmlContainer">
            <summary>
            Underline html container instance.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._borderStyle">
            <summary>
            The current border style of the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._baseRawCssData">
            <summary>
            the raw base stylesheet data used in the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._baseCssData">
            <summary>
            the base stylesheet data used in the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._text">
            <summary>
            the current html text set in the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._useSystemCursors">
            <summary>
            If to use cursors defined by the operating system or .NET cursors
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._textRenderingHint">
            <summary>
            The text rendering hint to be used for text rendering.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel._lastScrollOffset">
            <summary>
            The last position of the scrollbars to know if it has changed to update mouse
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.#ctor">
            <summary>
            Creates a new HtmlPanel and sets a basic css for it's styling.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.BorderStyleChanged">
            <summary>
              Raised when the BorderStyle property value changes.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br/>
            </summary>
            <remarks>
            <para>
            GDI+ text rendering is less smooth than GDI text rendering but it natively supports alpha channel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint"/>, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/> doesn't work well with transparent background.
            </para>
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.TextRenderingHint">
            <summary>
            The text rendering hint to be used for text rendering.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.UseSystemCursors">
            <summary>
            If to use cursors defined by the operating system or .NET cursors
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.BaseStylesheet">
            <summary>
            Set base stylesheet to be used by html rendered in the panel.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.AutoScroll">
            <summary>
            Gets or sets a value indicating whether the container enables the user to scroll to any controls placed outside of its visible boundaries. 
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.Text">
            <summary>
            Gets or sets the text of this panel
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.GetHtml">
            <summary>
            Get html from the current DOM tree with inline style.
            </summary>
            <returns>generated html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.ScrollToElement(System.String)">
            <summary>
            Adjust the scrollbar of the panel on html element by the given id.<br/>
            The top of the html element rectangle will be at the top of the panel, if there
            is not enough height to scroll to the top the scroll will be at maximum.<br/>
            </summary>
            <param name="elementId">the id of the element to scroll to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.CreateParams">
            <summary>
            Override to support border for the control.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Perform the layout of the html in the control.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.PerformHtmlLayout">
            <summary>
            Perform html container layout by the current panel client size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Perform paint of the html in the control.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnClick(System.EventArgs)">
            <summary>
            Set focus on the control for keyboard scrollbars handling.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnMouseLeave(System.EventArgs)">
            <summary>
            Handle mouse leave to handle cursor change.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse. 
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle key down event for selection, copy and scrollbars handling.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnBorderStyleChanged(System.EventArgs)">
            <summary>
              Raises the <see cref="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.BorderStyleChanged" /> event.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnLoadComplete(System.EventArgs)">
            <summary>
            Propagate the LoadComplete event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnLinkClicked(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs)">
            <summary>
            Propagate the LinkClicked event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnRenderError(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs)">
            <summary>
            Propagate the Render Error event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnStylesheetLoad(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs)">
            <summary>
            Propagate the stylesheet load event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnImageLoad(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Propagate the image load event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnRefresh(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs)">
            <summary>
            Handle html renderer invalidate and re-layout as requested.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnScrollChange(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlScrollEventArgs)">
            <summary>
            On html renderer scroll request adjust the scrolling of the panel to the requested location.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.UpdateScroll(System.Drawing.Point)">
            <summary>
            Adjust the scrolling of the panel to the requested location.
            </summary>
            <param name="location">the location to adjust the scroll to</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.InvokeMouseMove">
            <summary>
            call mouse move to handle paint after scroll or html change affecting mouse cursor.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Used to add arrow keys to the handled keys in <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.OnKeyDown(System.Windows.Forms.KeyEventArgs)"/>.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Override the proc processing method to set OS specific hand cursor.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.Dispose(System.Boolean)">
            <summary>
            Release the html container resources.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.Font">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.ForeColor">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.AllowDrop">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.RightToLeft">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.Cursor">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel.UseWaitCursor">
            <summary>
            Not applicable.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender">
            <summary>
            Standalone static class for simple and direct HTML rendering.<br/>
            For WinForms UI prefer using HTML controls: <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlPanel"/> or <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlLabel"/>.<br/>
            For low-level control and performance consider using <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer"/>.<br/>
            </summary>
            <remarks>
            <para>
            <b>GDI vs. GDI+ text rendering</b><br/>
            Windows supports two text rendering technologies: GDI and GDI+.<br/> 
            GDI is older, has better performance and looks better on standard monitors but doesn't support alpha channel for transparency.<br/> 
            GDI+ is newer, device independent so work better for printers but is slower and looks worse on monitors.<br/>
            HtmlRender supports both GDI and GDI+ text rendering to accommodate different needs, GDI+ text rendering methods have "GdiPlus" suffix
            in their name where GDI do not.<br/>
            </para>
            <para>
            <b>Rendering to image</b><br/>
            See https://htmlrenderer.codeplex.com/wikipage?title=Image%20generation <br/>
            Because of GDI text rendering issue with alpha channel clear type text rendering rendering to image requires special handling.<br/>
            <u>Solid color background -</u> generate an image where the background is filled with solid color and all the html is rendered on top
            of the background color, GDI text rendering will be used. (RenderToImage method where the first argument is html string)<br/>
            <u>Image background -</u> render html on top of existing image with whatever currently exist but it cannot have transparent pixels, 
            GDI text rendering will be used. (RenderToImage method where the first argument is Image object)<br/>
            <u>Transparent background -</u> render html to empty image using GDI+ text rendering, the generated image can be transparent.
            Text rendering can be controlled using <see cref="T:System.Drawing.Text.TextRenderingHint"/>, note that <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/>
            doesn't render well on transparent background. (RenderToImageGdiPlus method)<br/>
            </para>
            <para>
            <b>Overwrite stylesheet resolution</b><br/>
            Exposed by optional "stylesheetLoad" delegate argument.<br/>
            Invoked when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>Overwrite image resolution</b><br/>
            Exposed by optional "imageLoad" delegate argument.<br/>
            Invoked when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and provide 
            file path to load the image from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            Note: Cannot use asynchronous scheme overwrite scheme.<br/>
            </para>
            </remarks>
            <example>
            <para>
            <b>Simple rendering</b><br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>", 10, 10, 500, CssData.Parse("body {font-size: 20px}")");<br/>
            </para>
            <para>
            <b>Image rendering</b><br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", new Size(600,400));<br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", 600);<br/>
            HtmlRender.RenderToImage(existingImage, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            </para>
            </example>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.AddFontFamily(System.Drawing.FontFamily)">
            <summary>
            Adds a font family to be used in html rendering.<br/>
            The added font will be used by all rendering function including <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer"/> and all WinForms controls.
            </summary>
            <remarks>
            The given font family instance must be remain alive while the renderer is in use.<br/>
            If loaded to <see cref="T:System.Drawing.Text.PrivateFontCollection"/> then the collection must be alive.<br/>
            If loaded from file then the file must not be deleted.
            </remarks>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <remarks>
            This fonts mapping can be used as a fallback in case the requested font is not installed in the client system.
            </remarks>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.ParseStyleSheet(System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet to <see cref="T:TheArtOfDev.HtmlRenderer.Core.CssData"/> object.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso cref="!:http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="stylesheet">the stylesheet source to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the parsed css data</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.MeasureGdiPlus(System.Drawing.Graphics,System.String,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max width restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            The HTML will be layout by the given image size but may be clipped if cannot fit.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">optional: the top-left most location to start render the html at (default - 0,0)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Color,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Int32,System.Int32,System.Drawing.Color,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize.Width.Width"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize.Height.Height"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Int32,System.Int32,System.Drawing.Text.TextRenderingHint,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,TheArtOfDev.HtmlRenderer.Core.CssData,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize.Width.Width"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize.Height.Height"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,TheArtOfDev.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given width and height restrictions.<br/>
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.MeasureHtmlByRestrictions(TheArtOfDev.HtmlRenderer.WinForms.HtmlContainer,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Measure the size of the html by performing layout under the given restrictions.
            </summary>
            <param name="htmlContainer">the html to calculate the layout for</param>
            <param name="minSize">the minimal size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">the maximum size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <returns>return: the size of the html to be rendered within the min/max limits</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderClip(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Clip the graphics so the html will not be rendered outside the max height bound given.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.RenderHtml(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,TheArtOfDev.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlRender.CopyBufferToImage(System.IntPtr,System.Drawing.Image)">
            <summary>
            Copy all the bitmap bits from memory bitmap buffer to the given image.
            </summary>
            <param name="memoryHdc">the source memory bitmap buffer to copy from</param>
            <param name="image">the destination bitmap image to copy to</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip">
            <summary>
            Provides HTML rendering on the tooltips.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._htmlContainer">
            <summary>
            the container to render and handle the html shown in the tooltip
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._baseRawCssData">
            <summary>
            the raw base stylesheet data used in the control
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._baseCssData">
            <summary>
            the base stylesheet data used in the panel
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._textRenderingHint">
            <summary>
            The text rendering hint to be used for text rendering.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._tooltipCssClass">
            <summary>
            The CSS class used for tooltip html root div
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._associatedControl">
            <summary>
            the control that the tooltip is currently showing on.<br/>
            Used for link handling.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._linkHandlingTimer">
            <summary>
            timer used to handle mouse move events when mouse is over the tooltip.<br/>
            Used for link handling.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._tooltipHandle">
            <summary>
            the handle of the actual tooltip window used to know when the tooltip is hidden<br/>
            Used for link handling.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._allowLinksHandling">
            <summary>
            If to handle links in the tooltip (default: false).<br/>
            When set to true the mouse pointer will change to hand when hovering over a tooltip and
            if clicked the <see cref="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.LinkClicked"/> event will be raised although the tooltip will be closed.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.StylesheetLoad">
            <summary>
            Raised when aa stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br/>
            </summary>
            <remarks>
            <para>
            GDI+ text rendering is less smooth than GDI text rendering but it natively supports alpha channel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint"/>, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/> doesn't work well with transparent background.
            </para>
            </remarks>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.TextRenderingHint">
            <summary>
            The text rendering hint to be used for text rendering.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.BaseStylesheet">
            <summary>
            Set base stylesheet to be used by html rendered in the panel.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.TooltipCssClass">
            <summary>
            The CSS class used for tooltip html root div (default: htmltooltip)<br/>
            Setting to 'null' clear base style on the tooltip.<br/>
            Set custom class found in <see cref="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.BaseStylesheet"/> to change the base style of the tooltip.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.AllowLinksHandling">
            <summary>
            If to handle links in the tooltip (default: false).<br/>
            When set to true the mouse pointer will change to hand when hovering over a tooltip and
            if clicked the <see cref="E:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.LinkClicked"/> event will be raised although the tooltip will be closed.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.MaximumSize">
            <summary>
            Gets or sets the max size the tooltip.
            </summary>
            <returns>An ordered pair of type <see cref="T:System.Drawing.Size"/> representing the width and height of a rectangle.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnToolTipPopup(System.Windows.Forms.PopupEventArgs)">
            <summary>
            On tooltip appear set the html by the associated control, layout and set the tooltip size by the html size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnToolTipDraw(System.Windows.Forms.DrawToolTipEventArgs)">
            <summary>
            Draw the html using the tooltip graphics.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.AdjustTooltipPosition(System.Windows.Forms.Control,System.Drawing.Size)">
            <summary>
            Adjust the location of the tooltip window to the location of the mouse and handle
            if the tooltip window will try to appear outside the boundaries of the control.
            </summary>
            <param name="associatedControl">the control the tooltip is appearing on</param>
            <param name="size">the size of the tooltip window</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnLinkClicked(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs)">
            <summary>
            Propagate the LinkClicked event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnRenderError(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs)">
            <summary>
            Propagate the Render Error event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnStylesheetLoad(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs)">
            <summary>
            Propagate the stylesheet load event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnImageLoad(TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Propagate the image load event from root container.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnLinkHandlingTimerTick(System.EventArgs)">
            <summary>
            Raised on link handling timer tick, used for:
            1. Know when the tooltip is hidden by checking the visibility of the tooltip window.
            2. Call HandleMouseMove so the mouse cursor will react if over a link element.
            3. Call HandleMouseDown and HandleMouseUp to simulate click on a link if one was clicked.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip.OnToolTipDisposed(System.EventArgs)">
            <summary>
            Unsubscribe from events and dispose of <see cref="F:TheArtOfDev.HtmlRenderer.WinForms.HtmlToolTip._htmlContainer"/>.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper">
            <summary>
            Helper to encode and set HTML fragment to clipboard.<br/>
            See http://theartofdev.wordpress.com/2012/11/11/setting-html-and-plain-text-formatting-to-clipboard/.<br/>
            <seealso cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/>.
            </summary>
            <remarks>
            The MIT License (MIT) Copyright (c) 2014 Arthur Teplitzki.
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.Header">
            <summary>
            The string contains index references to other spots in the string, so we need placeholders so we can compute the offsets. <br/>
            The <![CDATA[<<<<<<<]]>_ strings are just placeholders. We'll back-patch them actual values afterwards. <br/>
            The string layout (<![CDATA[<<<]]>) also ensures that it can't appear in the body of the html because the <![CDATA[<]]> <br/>
            character must be escaped. <br/>
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.StartFragment">
            <summary>
            html comment to point the beginning of html fragment
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.EndFragment">
            <summary>
            html comment to point the end of html fragment
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper._byteCount">
            <summary>
            Used to calculate characters byte count in UTF-8
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)">
            <summary>
            Create <see cref="T:System.Windows.Forms.DataObject"/> with given html and plain-text ready to be used for clipboard or drag and drop.<br/>
            Handle missing <![CDATA[<html>]]> tags, specified start\end segments and Unicode characters.
            </summary>
            <remarks>
            <para>
            Windows Clipboard works with UTF-8 Unicode encoding while .NET strings use with UTF-16 so for clipboard to correctly
            decode Unicode string added to it from .NET we needs to be re-encoded it using UTF-8 encoding.
            </para>
            <para>
            Builds the CF_HTML header correctly for all possible HTMLs<br/>
            If given html contains start/end fragments then it will use them in the header:
            <code><![CDATA[<html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>]]></code>
            If given html contains html/body tags then it will inject start/end fragments to exclude html/body tags:
            <code><![CDATA[<html><body>hello <b>world</b></body></html>]]></code>
            If given html doesn't contain html/body tags then it will inject the tags and start/end fragments properly:
            <code><![CDATA[hello <b>world</b>]]></code>
            In all cases creating a proper CF_HTML header:<br/>
            <code>
            <![CDATA[
            Version:1.0
            StartHTML:000000177
            EndHTML:000000329
            StartFragment:000000277
            EndFragment:000000295
            StartSelection:000000277
            EndSelection:000000277
            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
            <html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>
            ]]>
            </code>
            See format specification here: http://msdn.microsoft.com/library/default.asp?url=/workshop/networking/clipboard/htmlclipboard.asp
            </para>
            </remarks>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String,System.String)">
            <summary>
            Clears clipboard and sets the given HTML and plain text fragment to the clipboard, providing additional meta-information for HTML.<br/>
            See <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/> for HTML fragment details.<br/>
            </summary>
            <example>
            ClipboardHelper.CopyToClipboard("Hello <b>World</b>", "Hello World");
            </example>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String)">
            <summary>
            Clears clipboard and sets the given plain text fragment to the clipboard.<br/>
            </summary>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.GetHtmlDataString(System.String)">
            <summary>
            Generate HTML fragment data string with header that is required for the clipboard.
            </summary>
            <param name="html">the html to generate for</param>
            <returns>the resulted string</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.ClipboardHelper.GetByteCount(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding the string in the string builder in UTF-8 and not .NET default string encoding.
            </summary>
            <param name="sb">the string builder to count its string</param>
            <param name="start">optional: the start index to calculate from (default - start of string)</param>
            <param name="end">optional: the end index to calculate to (default - end of string)</param>
            <returns>the number of bytes required to encode the string in UTF-8</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils">
            <summary>
            Utilities for converting WinForms entities to HtmlRenderer core entities.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.PointF)">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint[])">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.SizeF)">
            <summary>
            Convert from WinForms size to core size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.RectangleF)">
            <summary>
            Convert from WinForms rectangle to core rectangle.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.Color)">
            <summary>
            Convert from WinForms color to core color.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.Convert(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Convert from core color to WinForms color.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Utils.CreateGraphics(System.Windows.Forms.Control)">
            <summary>
            mono has issue throwing exception for no reason.
            </summary>
            <param name="control">the control to create graphics object from</param>
            <returns>new graphics object or null in mono if failed</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils">
            <summary>
            Utility for Win32 API.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.BitBltCopy">
            <summary>
            Const for BitBlt copy raster-operation code.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.BitBltPaint">
            <summary>
            Const for BitBlt paint raster-operation code.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Create a compatible memory HDC from the given HDC.<br/>
            The memory HDC can be rendered into without effecting the original HDC.<br/>
            The returned memory HDC and <paramref name="dib"/> must be released using <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)"/>.
            </summary>
            <param name="hdc">the HDC to create memory HDC from</param>
            <param name="width">the width of the memory HDC to create</param>
            <param name="height">the height of the memory HDC to create</param>
            <param name="dib">returns used bitmap memory section that must be released when done with memory HDC</param>
            <returns>memory HDC</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)">
            <summary>
            Release the given memory HDC and dib section created from <see cref="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)"/>.
            </summary>
            <param name="memoryHdc">Memory HDC to release</param>
            <param name="dib">bitmap section to release</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.GetWindowRect(System.IntPtr,System.Drawing.Rectangle@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="hWnd">A handle to the window.</param>
            <param name="lpRect">A pointer to a RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.WinForms.Utilities.Win32Utils.GetWindowRectangle(System.IntPtr)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="handle">A handle to the window.</param>
            <returns>RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor">
            <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Empty">
            <summary>
                Represents a color that is null.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Transparent">
            <summary>
            Gets a system-defined color.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Black">
            <summary>
                Gets a system-defined color that has an ARGB value of #FF000000.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.White">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFFFFFFF.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.WhiteSmoke">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFF5F5F5.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.LightGray">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFD3D3D3.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.R">
            <summary>
                Gets the red component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.G">
            <summary>
                Gets the green component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.B">
            <summary>
                Gets the blue component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.A">
            <summary>
                Gets the alpha component value of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.IsEmpty">
            <summary>
                Specifies whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure is uninitialized.
            </summary>
            <returns>
                This property returns true if this color is uninitialized; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are equivalent.
            </summary>
            <returns>
                true if the two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are equal; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are different.
            </summary>
            <returns>
                true if the two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structures are different; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that is to the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="alpha">The alpha component. Valid values are 0 through 255. </param>
            <param name="red">The red component. Valid values are 0 through 255. </param>
            <param name="green">The green component. Valid values are 0 through 255. </param>
            <param name="blue">The blue component. Valid values are 0 through 255. </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="alpha" />, <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="red">
                The red component value for the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="green">
                The green component value for the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="blue">
                The blue component value for the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.Equals(System.Object)">
            <summary>
                Tests whether the specified object is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure and is equivalent to this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />
                structure.
            </summary>
            <returns>
                true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure equivalent to this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />
                structure; otherwise, false.
            </returns>
            <param name="obj">The object to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
            <returns>
                An integer value that specifies the hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor.ToString">
            <summary>
                Converts this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor" /> structure to a human-readable string.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RDashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RPen"/> object.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent._control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent._aKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent._cKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.Control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.AKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RKeyEvent.CKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:TheArtOfDev.HtmlRenderer.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent._leftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent.#ctor(System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RMouseEvent.LeftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint">
            <summary>
                Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Empty">
            <summary>
                Represents a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> class with member data left uninitialized.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> class with the specified coordinates.
            </summary>
            <param name="x">The horizontal position of the point. </param>
            <param name="y">The vertical position of the point. </param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.IsEmpty">
            <summary>
                Gets a value indicating whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> is empty.
            </summary>
            <returns>
                true if both <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                are 0; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X">
            <summary>
                Gets or sets the x-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The x-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y">
            <summary>
                Gets or sets the y-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The y-coordinate of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Addition(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by the specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the x- and y-coordinates of the
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Subtraction(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by the negative of a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Compares two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structures. The result specifies whether the values of the
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" />
                and <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" /> properties of the two
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />
                structures are equal.
            </summary>
            <returns>
                true if the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                values of the left and right
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />
                structures are equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Determines whether the coordinates of the specified points are not equal.
            </summary>
            <returns>
                true to indicate the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                values of <paramref name="left" /> and
                <paramref
                    name="right" />
                are not equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Add(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a given <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Subtract(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> by the negative of a specified size.
            </summary>
            <returns>
                The translated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.Equals(System.Object)">
            <summary>
                Specifies whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> contains the same coordinates as the specified
                <see
                    cref="T:System.Object" />
                .
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> and has the same coordinates as this
                <see
                    cref="T:System.Drawing.Point" />
                .
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint.ToString">
            <summary>
                Converts this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to a human readable string.
            </summary>
            <returns>
                A string that represents this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect">
            <summary>
            Stores a set of four floating-point numbers that represent the location and size of a rectangle. 
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Empty">
            <summary>
                Represents an instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> class with its members uninitialized.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle. </param>
            <param name="width">The width of the rectangle. </param>
            <param name="height">The height of the rectangle. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.#ctor(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="location">A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> that represents the upper-left corner of the rectangular region.</param>
            <param name="size">A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> that represents the width and height of the rectangular region.</param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> that represents the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Size">
            <summary>
            Gets or sets the size of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />.
            </summary>
            <returns>A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> that represents the width and height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X">
            <summary>
                Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y">
            <summary>
                Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the upper-left corner of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width">
            <summary>
                Gets or sets the width of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The width of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height">
            <summary>
                Gets or sets the height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Left">
            <summary>
                Gets the x-coordinate of the left edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the left edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Top">
            <summary>
                Gets the y-coordinate of the top edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the top edge of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Right">
            <summary>
                Gets the x-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Bottom">
            <summary>
                Gets the y-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate that is the sum of <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.IsEmpty">
            <summary>
                Tests whether the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> has a value of zero.
            </summary>
            <returns>
                This property returns true if the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> has a value of zero; otherwise, false.
            </returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures have equal location and size.
            </summary>
            <returns>
                This operator returns true if the two specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures have equal
                <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" />, <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" />, <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />, and <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" /> properties.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the right of the equality operator.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures differ in location or size.
            </summary>
            <returns>
                This operator returns true if any of the <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.X" /> ,
                <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Y" />, <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Width" />, or <see cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Height" />
                properties of the two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structures are unequal; otherwise false.
            </returns>
            <param name="left">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the right of the inequality operator.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
            <returns>
                The new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> that this method creates.
            </returns>
            <param name="left">The x-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangular region. </param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Equals(System.Object)">
            <summary>
                Tests whether <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> with the same location and size of this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> and its X, Y, Width, and Height properties are equal to the corresponding properties of this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Contains(System.Double,System.Double)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="x">The x-coordinate of the point to test. </param>
            <param name="y">The y-coordinate of the point to test. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Contains(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point represented by the <paramref name="pt" /> parameter is contained within this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="pt">The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> to test.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Contains(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure.
            </summary>
            <returns>
                This method returns true if the rectangular region represented by <paramref name="rect" /> is entirely contained within the rectangular region represented by this
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                ; otherwise false.
            </returns>
            <param name="rect">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> to test.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Inflate(System.Double,System.Double)">
            <summary>
                Inflates this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure by the specified amount.
            </summary>
            <param name="x">
                The amount to inflate this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure horizontally.
            </param>
            <param name="y">
                The amount to inflate this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure vertically.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Inflate(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Inflates this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> by the specified amount.
            </summary>
            <param name="size">The amount to inflate this rectangle. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Inflate(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,System.Double,System.Double)">
            <summary>
                Creates and returns an inflated copy of the specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.
            </summary>
            <returns>
                The inflated <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />.
            </returns>
            <param name="rect">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> to be copied. This rectangle is not modified.
            </param>
            <param name="x">The amount to inflate the copy of the rectangle horizontally. </param>
            <param name="y">The amount to inflate the copy of the rectangle vertically. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Intersect(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Replaces this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure with the intersection of itself and the specified
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                structure.
            </summary>
            <param name="rect">The rectangle to intersect. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Intersect(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Returns a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that represents the intersection of two rectangles. If there is no intersection, and empty
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" />
                is returned.
            </summary>
            <returns>
                A third <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure the size of which represents the overlapped area of the two specified rectangles.
            </returns>
            <param name="a">A rectangle to intersect. </param>
            <param name="b">A rectangle to intersect. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.IntersectsWith(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
            <returns>
                This method returns true if there is any intersection.
            </returns>
            <param name="rect">The rectangle to test. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Union(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
            <returns>
                A third <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure that contains both of the two rectangles that form the union.
            </returns>
            <param name="a">A rectangle to union. </param>
            <param name="b">A rectangle to union. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Offset(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="pos">The amount to offset the location. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.Offset(System.Double,System.Double)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="x">The amount to offset the location horizontally. </param>
            <param name="y">The amount to offset the location vertically. </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.GetHashCode">
            <summary>
                Gets the hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure. For information about the use of hash codes, see Object.GetHashCode.
            </summary>
            <returns>The hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /></returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect.ToString">
            <summary>
            Converts the Location and Size of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> to a human-readable string.
            </summary>
            <returns>
            A string that contains the position, width, and height of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect" /> structure for example, "{X=20, Y=20, Width=100, Height=50}".
            </returns>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize">
            <summary>
            Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Empty">
            <summary>
                Gets a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Width" />
                value of 0.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Width" />
                value of 0.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.#ctor(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified existing
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <param name="size">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from which to create the new
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.#ctor(TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <param name="pt">The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure from which to initialize this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified dimensions.
            </summary>
            <param name="width">
                The width component of the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </param>
            <param name="height">
                The height component of the new <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </param>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.IsEmpty">
            <summary>
                Gets a value that indicates whether this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure has zero width and height.
            </summary>
            <returns>
                This property returns true when this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure has both a width and height of zero; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Width">
            <summary>
                Gets or sets the horizontal component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The horizontal component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Height">
            <summary>
                Gets or sets the vertical component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The vertical component of this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Explicit(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)~TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint">
            <summary>
                Converts the specified <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to a
                <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure to which this operator converts.</returns>
            <param name="size">The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to be converted
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Addition(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Subtraction(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> that is the result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Equality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structures are equal.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> have equal width and height; otherwise, false.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the equality operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.op_Inequality(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structures are different.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; false if
                <paramref
                    name="sz1" />
                and <paramref name="sz2" /> are equal.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left of the inequality operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Add(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Subtract(TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize,TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure that is a result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.Equals(System.Object)">
            <summary>
                Tests to see whether the specified object is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure with the same dimensions as this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> and has the same width and height as this
                <see
                    cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" />
                ; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.ToPointF">
            <summary>
                Converts a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure to a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                Returns a <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize.ToString">
            <summary>
                Creates a human-readable string that represents this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                A string that represents this <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
            <PermissionSet>
                <IPermission
                    class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                    version="1" Flags="UnmanagedCode" />
            </PermissionSet>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RAdapter">
            <summary>
            Platform adapter to bridge platform specific objects to HTML Renderer core library.<br/>
            Core uses abstract renderer objects (RAdapter/RControl/REtc...) to access platform specific functionality, the concrete platforms 
            implements those objects to provide concrete platform implementation. Those allowing the core library to be platform agnostic.
            <para>
            Platforms: WinForms, WPF, Metro, PDF renders, etc.<br/>
            Objects: UI elements(Controls), Graphics(Render context), Colors, Brushes, Pens, Fonts, Images, Clipboard, etc.<br/>
            </para>
            </summary>
            <remarks>
            It is best to have a singleton instance of this class for concrete implementation!<br/>
            This is because it holds caches of default CssData, Images, Fonts and Brushes.
            </remarks>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._brushesCache">
            <summary>
            cache of brush color to brush instance
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._penCache">
            <summary>
            cache of pen color to pen instance
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._fontsHandler">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._defaultCssData">
            <summary>
            default CSS parsed data singleton
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._loadImage">
            <summary>
            image used to draw loading image icon
            </summary>
        </member>
        <member name="F:TheArtOfDev.HtmlRenderer.Adapters.RAdapter._errorImage">
            <summary>
            image used to draw error image icon
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.DefaultCssData">
            <summary>
            Get the default CSS stylesheet data.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetColor(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetPen(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetSolidBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetLinearGradientBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ConvertImage(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ImageFromStream(System.IO.Stream)">
            <summary>
            Create an <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.IsFontExists(System.String)">
            <summary>
            Check if the given font exists in the system by font family name.
            </summary>
            <param name="font">the font name to check</param>
            <returns>true - font exists by given family name, false - otherwise</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.AddFontFamily(TheArtOfDev.HtmlRenderer.Adapters.RFontFamily)">
            <summary>
            Adds a font family to be used.
            </summary>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetFont(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetLoadingImage">
            <summary>
            Get image to be used while HTML image is loading.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetLoadingFailedImage">
            <summary>
            Get image to be used if HTML image load failed.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetClipboardDataObject(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboard(System.String)">
            <summary>
            Set the given text to the clipboard<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboard(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboard(TheArtOfDev.HtmlRenderer.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image object to set to clipboard</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetContextMenu">
            <summary>
            Create a context menu that can be used on the control<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SaveToFile(TheArtOfDev.HtmlRenderer.Adapters.RImage,System.String,System.String,TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFont(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFont(TheArtOfDev.HtmlRenderer.Adapters.RFontFamily,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetColorInt(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreatePen(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateSolidBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateLinearGradientBrush(TheArtOfDev.HtmlRenderer.Adapters.Entities.RRect,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,TheArtOfDev.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ConvertImageInt(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:TheArtOfDev.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.ImageFromStreamInt(System.IO.Stream)">
            <summary>
            Create an <see cref="T:TheArtOfDev.HtmlRenderer.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFontInt(System.String,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateFontInt(TheArtOfDev.HtmlRenderer.Adapters.RFontFamily,System.Double,TheArtOfDev.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.GetClipboardDataObjectInt(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(System.String)">
            <summary>
            Set the given text to the clipboard
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(TheArtOfDev.HtmlRenderer.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.CreateContextMenuInt">
            <summary>
            Create a context menu that can be used on the control
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RAdapter.SaveToFileInt(TheArtOfDev.HtmlRenderer.Adapters.RImage,System.String,System.String,TheArtOfDev.HtmlRenderer.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RBrush">
            <summary>
            Adapter for platform specific brush objects - used to fill graphics (rectangles, polygons and paths).<br/>
            The brush can be solid color, gradient or image.
            </summary>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu">
            <summary>
            Adapter for platform specific context menu - used to create and show context menu at specific location.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
        </member>
        <member name="P:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.ItemsCount">
            <summary>
            The total number of items in the context menu
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.AddDivider">
            <summary>
            Add divider item to the context menu.<br />
            The divider is a non clickable place holder used to separate items.
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.AddItem(System.String,System.Boolean,System.EventHandler)">
            <summary>
            Add item to the context menu with the given text that will raise the given event when clicked.
            </summary><param name="text">the text to set on the new context menu item</param><param name="enabled">if to set the item as enabled or disabled</param><param name="onClick">the event to raise when the item is clicked</param>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.RemoveLastDivider">
            <summary>
            Remove the last item from the context menu iff it is a divider
            </summary>
        </member>
        <member name="M:TheArtOfDev.HtmlRenderer.Adapters.RContextMenu.Show(TheArtOfDev.HtmlRenderer.Adapters.RControl,TheArtOfDev.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Show the context menu in the given parent control at the given location.
            </summary><param name="parent">the parent control to show in</param><param name="location">the location to show at relative to the parent control</param>
        </member>
        <member name="T:TheArtOfDev.HtmlRenderer.Adapters.RControl">
 